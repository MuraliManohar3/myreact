// class Solution {
// public:
// long long f(int a,int b,int c,int d,int e,int f,bool turn)
// {
//     if(a>8 || b>8 || c>8 || d>8 || a<1 || b<1 || c<1 || d<1) return INT_MAX;
//     if(turn==1)
//     {
//             if( (a==e) && (c==e && d>=b && d<=f) ) return INT_MAX;
//             if( (a==e) && (c==e && d>=f && d<=b) ) return INT_MAX; 
//             if( (a==e) && (d==f && c>=a && c<=e) ) return INT_MAX; 
//             if( (a==e) && (d==f && c<=a && e<=c) ) return INT_MAX; 
//             if(a==e || b==f) return 1; 
//     }
//     else
//     {
//             if(abs(e-f)==abs(c-d) && (a>=e && a<=c && b>=f && b<=d) ) return INT_MAX; 
//             if(abs(e-f)==abs(c-d) && (a>=c && a<=e && b>=d && b<=f ) ) return INT_MAX;
//             if( (e+f)==(c+d) && (a<=c && a>=e && b>=d && b<=f) ) return INT_MAX;
//             if( (e+f)==(c+d) && (a>=c && a<=e && b>=f && b<=d) ) return INT_MAX;
//             if(abs(e-f)==abs(c-d)) return 1;
//             if((e+f)==(c+d)) return 1;
//     }
//     //rook(a,b)
//    int r1=INT_MAX,r2=INT_MAX,r3=INT_MAX,r4=INT_MAX;
//     for(int i=1;i<=8;i++)
//     {
//         r1= min(r1, f(a,b+i,c,d,e,f,1));
//         r2= min(r2, f(a+i,b,c,d,e,f,1));
//         r3= min(r3, f(a-i,b,c,d,e,f,1));
//         r4= min(r4, f(a,b-i,c,d,e,f,1));
//     }

//    int t1=min(r1,r2), t2=min(r3,r4);
//    int rw= min(t1,t2);

//     //bishop(c,d)
//    int b1=INT_MAX,b2=INT_MAX,b3=INT_MAX,b4=INT_MAX;
//     for(int i=1;i<=8;i++)
//     {
//         b1=min(b1,f(a,b,c+i,d-i,e,f,0));
//         b2=min(b1,f(a,b,c-i,d-i,e,f,0));
//         b3=min(b1,f(a,b,c-i,d+i,e,f,0));    
//         b4=min(b1,f(a,b,c+i,d+i,e,f,0));           
//     }
//    int bb= min(b1,b2), bb2= min(b3,b4);
//    int bw=min(bb,bb2);

//      return min(rw,bw);
// }
//     int minMovesToCaptureTheQueen(int a, int b, int c, int d, int e, int f) {
//         return f(a,b,c,d,e,f,1);
//     }
// };

